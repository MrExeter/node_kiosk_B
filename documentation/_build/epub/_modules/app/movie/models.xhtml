<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>app.movie.models</title>
    <link rel="stylesheet" href="../../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for app.movie.models</h1><div class="highlight"><pre>
<span></span><span class="sd">&#39;&#39;&#39;</span>
<span class="sd">Description - Movie Model</span>
<span class="sd">@author - John Sentz</span>
<span class="sd">@date - 09-Mar-2018</span>
<span class="sd">@time - 2:24 PM</span>
<span class="sd">&#39;&#39;&#39;</span>
<span class="kn">from</span> <span class="nn">flask</span> <span class="k">import</span> <span class="n">flash</span>
<span class="kn">from</span> <span class="nn">sqlalchemy.exc</span> <span class="k">import</span> <span class="n">IntegrityError</span><span class="p">,</span> <span class="n">DatabaseError</span><span class="p">,</span> <span class="n">DataError</span>
<span class="kn">from</span> <span class="nn">sqlalchemy.orm.exc</span> <span class="k">import</span> <span class="n">FlushError</span>

<span class="kn">from</span> <span class="nn">app</span> <span class="k">import</span> <span class="n">db</span>
<span class="kn">from</span> <span class="nn">app.utils.link_controller</span> <span class="k">import</span> <span class="n">LinkController</span>

<span class="n">link_playlists</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Table</span><span class="p">(</span><span class="s1">&#39;link_playlists&#39;</span><span class="p">,</span>
                          <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="s1">&#39;link_id&#39;</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s1">&#39;videolink.id&#39;</span><span class="p">),</span> <span class="n">primary_key</span><span class="o">=</span><span class="kc">True</span><span class="p">),</span>
                          <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="s1">&#39;playlist_id&#39;</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s1">&#39;playlist.id&#39;</span><span class="p">),</span> <span class="n">primary_key</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
                          <span class="p">)</span>


<div class="viewcode-block" id="Movie"><a class="viewcode-back" href="../../../node.xhtml#app.movie.models.Movie">[docs]</a><span class="k">class</span> <span class="nc">Movie</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Movie model has a &quot;one-to-many&quot; relationship between it and the \</span>
<span class="sd">    video-link object.  One movie may be related to many VideoLinks&quot;&quot;&quot;</span>
    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s1">&#39;movie&#39;</span>

    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">64</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">file_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">64</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">location</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">play_count</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">)</span>
    <span class="n">currently_playing</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Boolean</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">play_on_start</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Boolean</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">links</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">relationship</span><span class="p">(</span><span class="s1">&#39;VideoLink&#39;</span><span class="p">,</span>
                            <span class="n">foreign_keys</span><span class="o">=</span><span class="s2">&quot;[VideoLink.movie_id, VideoLink.full_filepath]&quot;</span><span class="p">,</span>
                            <span class="n">cascade</span><span class="o">=</span><span class="s2">&quot;all&quot;</span><span class="p">,</span>
                            <span class="n">backref</span><span class="o">=</span><span class="s1">&#39;movie&#39;</span><span class="p">,</span>
                            <span class="n">lazy</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">create_movie</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">file_name</span><span class="p">,</span> <span class="n">location</span><span class="p">):</span>
        <span class="n">movie</span> <span class="o">=</span> <span class="bp">cls</span><span class="p">(</span><span class="n">name</span><span class="o">=</span><span class="n">name</span><span class="p">,</span>
                    <span class="n">file_name</span><span class="o">=</span><span class="n">file_name</span><span class="p">,</span>
                    <span class="n">location</span><span class="o">=</span><span class="n">location</span><span class="p">)</span>

        <span class="k">try</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">movie</span><span class="p">)</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Movie created successfully&quot;</span><span class="p">)</span>
            <span class="k">return</span> <span class="n">movie</span>

        <span class="k">except</span> <span class="n">IntegrityError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DataError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DatabaseError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">file_name</span><span class="p">,</span> <span class="n">location</span><span class="p">,</span> <span class="n">play_count</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span> <span class="n">currently_playing</span><span class="o">=</span><span class="kc">False</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">file_name</span> <span class="o">=</span> <span class="n">file_name</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">location</span> <span class="o">=</span> <span class="n">location</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">play_count</span> <span class="o">=</span> <span class="n">play_count</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">currently_playing</span> <span class="o">=</span> <span class="n">currently_playing</span>

    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s1">&#39;Video name : </span><span class="si">{}</span><span class="s1">, File : </span><span class="si">{}</span><span class="s1">&#39;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span> <span class="bp">self</span><span class="o">.</span><span class="n">file_name</span><span class="p">)</span></div>


<div class="viewcode-block" id="VideoLink"><a class="viewcode-back" href="../../../node.xhtml#app.movie.models.VideoLink">[docs]</a><span class="k">class</span> <span class="nc">VideoLink</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;VideoLink object has a &quot;many-to-one&quot; relationship between it and the \</span>
<span class="sd">    Movie object.  One Movie may be related to many VideoLinks&quot;&quot;&quot;</span>
    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s1">&#39;videolink&#39;</span>

    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">movie_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">32</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">full_filepath</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">128</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">unique</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">movie_id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">db</span><span class="o">.</span><span class="n">ForeignKey</span><span class="p">(</span><span class="s2">&quot;movie.id&quot;</span><span class="p">))</span>
    <span class="n">linkplaylist</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">relationship</span><span class="p">(</span><span class="s1">&#39;Playlist&#39;</span><span class="p">,</span>
                                   <span class="n">secondary</span><span class="o">=</span><span class="n">link_playlists</span><span class="p">,</span>
                                   <span class="n">lazy</span><span class="o">=</span><span class="s1">&#39;subquery&#39;</span><span class="p">,</span>
                                   <span class="n">single_parent</span><span class="o">=</span><span class="kc">True</span><span class="p">,</span>
                                   <span class="n">backref</span><span class="o">=</span><span class="n">db</span><span class="o">.</span><span class="n">backref</span><span class="p">(</span><span class="s1">&#39;links&#39;</span><span class="p">,</span> <span class="n">cascade</span><span class="o">=</span><span class="s2">&quot;all&quot;</span><span class="p">,</span> <span class="n">lazy</span><span class="o">=</span><span class="kc">True</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">movie</span><span class="p">,</span> <span class="n">link_path</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">movie_name</span> <span class="o">=</span> <span class="n">movie</span><span class="o">.</span><span class="n">name</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">full_filepath</span> <span class="o">=</span> <span class="n">link_path</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">movie_id</span> <span class="o">=</span> <span class="n">movie</span><span class="o">.</span><span class="n">id</span>

    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">create_link</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="n">movie</span><span class="p">):</span>
        <span class="n">videolink</span> <span class="o">=</span> <span class="bp">cls</span><span class="p">(</span><span class="n">movie</span><span class="o">=</span><span class="n">movie</span><span class="p">)</span>

        <span class="k">try</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">videolink</span><span class="p">)</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
            <span class="k">return</span> <span class="n">videolink</span>

        <span class="k">except</span> <span class="n">IntegrityError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DataError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DatabaseError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span></div>

<span class="c1">###############################################################################</span>
<span class="c1">#</span>
<span class="c1"># Define the root directory of all playlists</span>
<span class="c1">#</span>
<span class="n">PLAYLIST_ROOT</span> <span class="o">=</span> <span class="s2">&quot;/home/pi/node_kiosk_B/app/static/videos/playlists/&quot;</span>
<span class="c1">#</span>
<span class="c1">#</span>
<span class="c1">###############################################################################</span>


<span class="k">def</span> <span class="nf">set_playlist_to_play_on_start</span><span class="p">(</span><span class="nb">id</span><span class="p">):</span>
    <span class="n">playlists</span> <span class="o">=</span> <span class="n">Playlist</span><span class="o">.</span><span class="n">query</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
    <span class="k">for</span> <span class="n">playlist</span> <span class="ow">in</span> <span class="n">playlists</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">playlist</span><span class="o">.</span><span class="n">id</span> <span class="o">!=</span> <span class="nb">id</span><span class="p">:</span>
            <span class="n">playlist</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="kc">False</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">playlist</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="kc">True</span>

    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>


<div class="viewcode-block" id="Playlist"><a class="viewcode-back" href="../../../node.xhtml#app.movie.models.Playlist">[docs]</a><span class="k">class</span> <span class="nc">Playlist</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="sd">&quot;&quot;&quot;Playlist represents a playlist of videos, described by a name, \</span>
<span class="sd">    a directory path, directory name, currently playing boolean \</span>
<span class="sd">    flag and a play on start boolean flag&quot;&quot;&quot;</span>
    <span class="n">__tablename__</span> <span class="o">=</span> <span class="s1">&#39;playlist&#39;</span>

    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">64</span><span class="p">),</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">unique</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
    <span class="n">directory_path</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">128</span><span class="p">))</span>
    <span class="n">directory_name</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">String</span><span class="p">(</span><span class="mi">64</span><span class="p">))</span>
    <span class="n">currently_playing</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Boolean</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>
    <span class="n">play_on_start</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="o">.</span><span class="n">Boolean</span><span class="p">,</span> <span class="n">nullable</span><span class="o">=</span><span class="kc">False</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="kc">False</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">play_on_start</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="n">play_on_start</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">get_directory_name</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span>

    <span class="k">def</span> <span class="nf">set_name</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="o">.</span><span class="n">replace</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">set_directory_path</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">directory_path</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">directory_path</span> <span class="o">=</span> <span class="n">directory_path</span>

    <span class="k">def</span> <span class="nf">get_directory_path</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">directory_path</span>

    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">get_playlist_path</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="n">playlist_name</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">PLAYLIST_ROOT</span> <span class="o">+</span> <span class="n">playlist_name</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span>

<div class="viewcode-block" id="Playlist.create_playlist"><a class="viewcode-back" href="../../../node.xhtml#app.movie.models.Playlist.create_playlist">[docs]</a>    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">create_playlist</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">play_on_start</span><span class="p">,</span> <span class="o">*</span><span class="n">movies</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;Create playlist classmethod, with name, play_on_start, \</span>
<span class="sd">        and a list of movie objects&quot;&quot;&quot;</span>
        <span class="n">playlist</span> <span class="o">=</span> <span class="bp">cls</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">play_on_start</span><span class="p">)</span>

        <span class="n">directory</span> <span class="o">=</span> <span class="n">playlist</span><span class="o">.</span><span class="n">directory_name</span>

        <span class="sd">&quot;&quot;&quot;:raises IntegrityError: &quot;&quot;&quot;</span>

        <span class="c1">###############################################################################</span>
        <span class="c1">#</span>
        <span class="c1"># Root of all playlist directories</span>
        <span class="c1">#</span>
        <span class="n">playlist_root_directory</span> <span class="o">=</span> <span class="n">PLAYLIST_ROOT</span> <span class="o">+</span> <span class="n">directory</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span>
        <span class="n">playlist</span><span class="o">.</span><span class="n">set_directory_path</span><span class="p">(</span><span class="n">playlist_root_directory</span><span class="p">)</span>

        <span class="c1">###############################################################################</span>
        <span class="c1">#</span>
        <span class="c1"># List that will be used to pass tuples of (movie, link)</span>
        <span class="c1">#</span>
        <span class="n">movie_link_pairs</span> <span class="o">=</span> <span class="p">[]</span>

        <span class="k">try</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">play_on_start</span><span class="p">:</span>
                <span class="n">set_playlist_to_play_on_start</span><span class="p">(</span><span class="n">playlist</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>

            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">playlist</span><span class="p">)</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

            <span class="n">linkz</span> <span class="o">=</span> <span class="p">[]</span>
            <span class="n">movies</span> <span class="o">=</span> <span class="n">movies</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>  <span class="c1"># convert tuple to list</span>
            <span class="c1"># if no movies than set play on start to False</span>
            <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">movies</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                <span class="n">playlist</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="kc">False</span>

            <span class="k">for</span> <span class="n">movie</span> <span class="ow">in</span> <span class="n">movies</span><span class="p">:</span>
                <span class="n">link_path</span> <span class="o">=</span> <span class="n">playlist_root_directory</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">movies</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">movie</span><span class="p">))</span> <span class="o">+</span> <span class="s2">&quot;.mp4&quot;</span>
                <span class="n">video_link</span> <span class="o">=</span> <span class="n">VideoLink</span><span class="p">(</span><span class="n">movie</span><span class="o">=</span><span class="n">movie</span><span class="p">,</span> <span class="n">link_path</span><span class="o">=</span><span class="n">link_path</span><span class="p">)</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># List of tuples (movie, link) used to create links on disk</span>
                <span class="c1">#</span>
                <span class="n">movie_link_pairs</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">movie</span><span class="p">,</span> <span class="n">video_link</span><span class="p">))</span>

                <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">video_link</span><span class="p">)</span>
                <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
                <span class="n">linkz</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">video_link</span><span class="p">)</span>

            <span class="c1">###############################################################################</span>
            <span class="c1">#</span>
            <span class="c1"># New playlist is being set to play on start, reset others to False</span>
            <span class="c1">#</span>
            <span class="k">if</span> <span class="n">playlist</span><span class="o">.</span><span class="n">play_on_start</span><span class="p">:</span>
                <span class="n">set_playlist_to_play_on_start</span><span class="p">(</span><span class="n">playlist</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>

            <span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">linkz</span><span class="p">:</span>
                <span class="n">playlist</span><span class="o">.</span><span class="n">links</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

            <span class="c1">###############################################################################</span>
            <span class="c1">#</span>
            <span class="c1"># Create playlist directory and symlinks</span>
            <span class="c1">#</span>
            <span class="n">create_linkcontroller</span> <span class="o">=</span> <span class="n">LinkController</span><span class="p">()</span>
            <span class="n">create_linkcontroller</span><span class="o">.</span><span class="n">create_playlist_directory</span><span class="p">(</span><span class="n">playlist_root_directory</span><span class="p">)</span>
            <span class="n">create_linkcontroller</span><span class="o">.</span><span class="n">create_links</span><span class="p">(</span><span class="n">directory</span><span class="p">,</span> <span class="o">*</span><span class="n">movie_link_pairs</span><span class="p">)</span>

            <span class="n">flash</span><span class="p">(</span><span class="s1">&#39;Playlist Creation Successful&#39;</span><span class="p">)</span>
            <span class="k">return</span> <span class="s1">&#39;Playlist Creation Successful&#39;</span>

        <span class="k">except</span> <span class="n">IntegrityError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DataError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DatabaseError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">FlushError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Flush Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Flush Error encountered&quot;</span><span class="p">)</span></div>

    <span class="k">def</span> <span class="nf">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="s2">&quot;Playlist : </span><span class="si">{}</span><span class="s2">&quot;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">update_playlist</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">new_name</span><span class="p">,</span> <span class="n">play_on_start</span><span class="p">,</span> <span class="o">*</span><span class="n">new_movies</span><span class="p">):</span>

        <span class="c1"># directory = new_name.replace(&quot; &quot;, &quot;&quot;)</span>
        <span class="c1"># playlist_root_directory = PLAYLIST_ROOT + directory + &quot;/&quot;</span>

        <span class="c1"># list of tuples (movie, link)</span>
        <span class="n">movie_link_pairs</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="n">play_on_start</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">!=</span> <span class="n">new_name</span><span class="p">:</span>
                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># Name Change!</span>
                <span class="c1"># Complete change, playlist name changes, create new playlist directory and populate with links</span>
                <span class="c1">#</span>
                <span class="n">old_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">name</span>
                <span class="n">old_directory_name</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">set_name</span><span class="p">(</span><span class="n">new_name</span><span class="p">)</span>
                <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># Retrieve old links for deletion</span>
                <span class="c1">#</span>
                <span class="n">old_links</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">links</span>
                <span class="k">for</span> <span class="n">old_link</span> <span class="ow">in</span> <span class="n">old_links</span><span class="p">:</span>
                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">old_link</span><span class="p">)</span>
                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

                <span class="n">linkz</span> <span class="o">=</span> <span class="p">[]</span>

                <span class="n">playlist_root_directory</span> <span class="o">=</span> <span class="n">PLAYLIST_ROOT</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span>
                <span class="bp">self</span><span class="o">.</span><span class="n">set_directory_path</span><span class="p">(</span><span class="n">playlist_root_directory</span><span class="p">)</span>

                <span class="n">new_movies</span> <span class="o">=</span> <span class="n">new_movies</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>  <span class="c1"># convert tuple to list</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># if no movies than set play on start to False, also if play on start True, reset others to False</span>
                <span class="c1">#</span>
                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">new_movies</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="kc">False</span>
                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># New playlist is being set to play on start, reset others to False</span>
                <span class="c1">#</span>
                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">play_on_start</span><span class="p">:</span>
                    <span class="n">set_playlist_to_play_on_start</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>

                <span class="k">for</span> <span class="n">movie</span> <span class="ow">in</span> <span class="n">new_movies</span><span class="p">:</span>
                    <span class="n">link_path</span> <span class="o">=</span> <span class="n">playlist_root_directory</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">new_movies</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">movie</span><span class="p">))</span> <span class="o">+</span> <span class="s2">&quot;.mp4&quot;</span>
                    <span class="n">video_link</span> <span class="o">=</span> <span class="n">VideoLink</span><span class="p">(</span><span class="n">movie</span><span class="o">=</span><span class="n">movie</span><span class="p">,</span> <span class="n">link_path</span><span class="o">=</span><span class="n">link_path</span><span class="p">)</span>

                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">video_link</span><span class="p">)</span>
                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
                    <span class="n">linkz</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">video_link</span><span class="p">)</span>

                    <span class="n">movie_link_pairs</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">movie</span><span class="p">,</span> <span class="n">video_link</span><span class="p">))</span>

                <span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">linkz</span><span class="p">:</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">links</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
                <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># Delete old links and old playlist directory</span>
                <span class="c1">#</span>
                <span class="n">delete_linkcontroller</span> <span class="o">=</span> <span class="n">LinkController</span><span class="p">()</span>
                <span class="n">delete_linkcontroller</span><span class="o">.</span><span class="n">delete_links</span><span class="p">(</span><span class="n">old_directory_name</span><span class="p">)</span>
                <span class="n">delete_linkcontroller</span><span class="o">.</span><span class="n">delete_playlist_directory</span><span class="p">(</span><span class="n">old_directory_name</span><span class="p">)</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># Create new playlist directory and populate with new links</span>
                <span class="c1">#</span>
                <span class="n">create_linkcontroller</span> <span class="o">=</span> <span class="n">LinkController</span><span class="p">()</span>
                <span class="n">create_linkcontroller</span><span class="o">.</span><span class="n">create_playlist_directory</span><span class="p">(</span><span class="n">playlist_root_directory</span><span class="p">)</span>
                <span class="n">create_linkcontroller</span><span class="o">.</span><span class="n">create_links</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span><span class="p">,</span> <span class="o">*</span><span class="n">movie_link_pairs</span><span class="p">)</span>

                <span class="n">flash</span><span class="p">(</span><span class="s1">&#39;Playlist Updated Successful&#39;</span><span class="p">)</span>

            <span class="k">else</span><span class="p">:</span>
                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># Path doesn&#39;t change, just delete links that are now dead, save those that are valid</span>
                <span class="c1">#</span>
                <span class="n">old_links</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">links</span>
                <span class="k">for</span> <span class="n">old_link</span> <span class="ow">in</span> <span class="n">old_links</span><span class="p">:</span>
                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">delete</span><span class="p">(</span><span class="n">old_link</span><span class="p">)</span>
                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

                <span class="n">linkz</span> <span class="o">=</span> <span class="p">[]</span>

                <span class="n">playlist_root_directory</span> <span class="o">=</span> <span class="n">PLAYLIST_ROOT</span> <span class="o">+</span> <span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span> <span class="o">+</span> <span class="s2">&quot;/&quot;</span>

                <span class="n">new_movies</span> <span class="o">=</span> <span class="n">new_movies</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>  <span class="c1"># convert tuple to list</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># if no movies than set play on start to False</span>
                <span class="c1">#</span>
                <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="n">new_movies</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">play_on_start</span> <span class="o">=</span> <span class="kc">False</span>
                <span class="c1"># New playlist is being set to play on start, reset others to False</span>
                <span class="k">if</span> <span class="bp">self</span><span class="o">.</span><span class="n">play_on_start</span><span class="p">:</span>
                    <span class="n">set_playlist_to_play_on_start</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">id</span><span class="p">)</span>

                <span class="k">for</span> <span class="n">movie</span> <span class="ow">in</span> <span class="n">new_movies</span><span class="p">:</span>
                    <span class="n">link_path</span> <span class="o">=</span> <span class="n">playlist_root_directory</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">new_movies</span><span class="o">.</span><span class="n">index</span><span class="p">(</span><span class="n">movie</span><span class="p">))</span> <span class="o">+</span> <span class="s2">&quot;.mp4&quot;</span>
                    <span class="n">video_link</span> <span class="o">=</span> <span class="n">VideoLink</span><span class="p">(</span><span class="n">movie</span><span class="o">=</span><span class="n">movie</span><span class="p">,</span> <span class="n">link_path</span><span class="o">=</span><span class="n">link_path</span><span class="p">)</span>

                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">add</span><span class="p">(</span><span class="n">video_link</span><span class="p">)</span>
                    <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>
                    <span class="n">linkz</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">video_link</span><span class="p">)</span>

                    <span class="n">movie_link_pairs</span><span class="o">.</span><span class="n">append</span><span class="p">((</span><span class="n">movie</span><span class="p">,</span> <span class="n">video_link</span><span class="p">))</span>

                <span class="k">for</span> <span class="n">link</span> <span class="ow">in</span> <span class="n">linkz</span><span class="p">:</span>
                    <span class="bp">self</span><span class="o">.</span><span class="n">links</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">link</span><span class="p">)</span>
                <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">commit</span><span class="p">()</span>

                <span class="c1">###############################################################################</span>
                <span class="c1">#</span>
                <span class="c1"># Delete old links and create new links disk</span>
                <span class="c1">#</span>
                <span class="n">update_linkcontroller</span> <span class="o">=</span> <span class="n">LinkController</span><span class="p">()</span>
                <span class="n">update_linkcontroller</span><span class="o">.</span><span class="n">delete_links</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span><span class="p">)</span>
                <span class="n">update_linkcontroller</span><span class="o">.</span><span class="n">create_links</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">directory_name</span><span class="p">,</span> <span class="o">*</span><span class="n">movie_link_pairs</span><span class="p">)</span>

                <span class="n">flash</span><span class="p">(</span><span class="s1">&#39;Playlist Updated Successful&#39;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">IntegrityError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Integrity Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DataError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Data Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">DatabaseError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Error encountered&quot;</span><span class="p">)</span>

        <span class="k">except</span> <span class="n">FlushError</span><span class="p">:</span>
            <span class="n">db</span><span class="o">.</span><span class="n">session</span><span class="o">.</span><span class="n">rollback</span><span class="p">()</span>
            <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Database Flush Error encountered&quot;</span><span class="p">)</span>
            <span class="n">flash</span><span class="p">(</span><span class="s2">&quot;Database Flush Error encountered&quot;</span><span class="p">)</span></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>