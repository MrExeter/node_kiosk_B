<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>Welcome to Node Kiosk’s documentation!</title>
    <link rel="stylesheet" href="_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <div class="section" id="module-app.movie">
<span id="welcome-to-node-kiosk-s-documentation"></span><h1>Welcome to Node Kiosk’s documentation!</h1>
<div class="section" id="module-app.movie.models">
<span id="movie-models"></span><h2>Movie Models</h2>
<p>Description - Movie Model
&#64;author - John Sentz
&#64;date - 09-Mar-2018
&#64;time - 2:24 PM</p>
<dl class="class">
<dt id="app.movie.models.Movie">
<em class="property">class </em><code class="descclassname">app.movie.models.</code><code class="descname">Movie</code><span class="sig-paren">(</span><em>name</em>, <em>file_name</em>, <em>location</em>, <em>play_count=0</em>, <em>currently_playing=False</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/movie/models.xhtml#Movie"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Movie model has a “one-to-many” relationship between it and the     video-link object.  One movie may be related to many VideoLinks</p>
</dd></dl>

<dl class="class">
<dt id="app.movie.models.Playlist">
<em class="property">class </em><code class="descclassname">app.movie.models.</code><code class="descname">Playlist</code><span class="sig-paren">(</span><em>name</em>, <em>play_on_start</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/movie/models.xhtml#Playlist"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Playlist represents a playlist of videos, described by a name,     a directory path, directory name, currently playing boolean     flag and a play on start boolean flag</p>
<dl class="classmethod">
<dt id="app.movie.models.Playlist.create_playlist">
<em class="property">classmethod </em><code class="descname">create_playlist</code><span class="sig-paren">(</span><em>name</em>, <em>play_on_start</em>, <em>*movies</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/movie/models.xhtml#Playlist.create_playlist"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Create playlist classmethod, with name, play_on_start,         and a list of movie objects</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="app.movie.models.VideoLink">
<em class="property">class </em><code class="descclassname">app.movie.models.</code><code class="descname">VideoLink</code><span class="sig-paren">(</span><em>movie</em>, <em>link_path</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/movie/models.xhtml#VideoLink"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>VideoLink object has a “many-to-one” relationship between it and the     Movie object.  One Movie may be related to many VideoLinks</p>
</dd></dl>

</div>
<div class="section" id="module-app.utils">
<span id="node-utils"></span><h2>Node Utils</h2>
</div>
<div class="section" id="module-app.utils.utils">
<span id="utils"></span><h2>Utils</h2>
<p>Description - System monitor utilities
&#64;author - John Sentz
&#64;date - 13-Mar-2018
&#64;time - 5:31 PM</p>
<dl class="class">
<dt id="app.utils.utils.BobUecker">
<em class="property">class </em><code class="descclassname">app.utils.utils.</code><code class="descname">BobUecker</code><a class="reference internal" href="_modules/app/utils/utils.xhtml#BobUecker"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Utility class for controlling the Node</p>
<dl class="classmethod">
<dt id="app.utils.utils.BobUecker.loop_playlist">
<em class="property">classmethod </em><code class="descname">loop_playlist</code><span class="sig-paren">(</span><em>playlist_id</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/utils/utils.xhtml#BobUecker.loop_playlist"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Given a playlist_id, a playlist by that ID is retrieved from the database, the full file path is
returned.  All videos and playlists are set to not playing, all playing videos and playlists are stopped.</p>
<p>Then a playlist_looper.sh script is launched, The PID of that script is saved as a class variable.</p>
<dl class="field-list simple">
<dt class="field-odd">Parameters</dt>
<dd class="field-odd"><p><strong>playlist_id</strong> – </p>
</dd>
<dt class="field-even">Returns</dt>
<dd class="field-even"><p></p>
</dd>
</dl>
</dd></dl>

<dl class="classmethod">
<dt id="app.utils.utils.BobUecker.loop_video">
<em class="property">classmethod </em><code class="descname">loop_video</code><span class="sig-paren">(</span><em>video_id</em><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/utils/utils.xhtml#BobUecker.loop_video"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Take video_id, find video in database, retrieve full filepath, launch script that
loops a single video as subprocess
:param video_id:
:return:</p>
</dd></dl>

<dl class="classmethod">
<dt id="app.utils.utils.BobUecker.sleep_display">
<em class="property">classmethod </em><code class="descname">sleep_display</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/utils/utils.xhtml#BobUecker.sleep_display"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Puts display into standby mode</p>
</dd></dl>

<dl class="classmethod">
<dt id="app.utils.utils.BobUecker.stop_playlist">
<em class="property">classmethod </em><code class="descname">stop_playlist</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/utils/utils.xhtml#BobUecker.stop_playlist"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Use PID to stop playlist script, then stop_video to terminate the         video that is left playing</p>
</dd></dl>

<dl class="classmethod">
<dt id="app.utils.utils.BobUecker.wake_display">
<em class="property">classmethod </em><code class="descname">wake_display</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/utils/utils.xhtml#BobUecker.wake_display"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Wakes display</p>
</dd></dl>

</dd></dl>

<dl class="class">
<dt id="app.utils.utils.SystemMonitor">
<em class="property">class </em><code class="descclassname">app.utils.utils.</code><code class="descname">SystemMonitor</code><a class="reference internal" href="_modules/app/utils/utils.xhtml#SystemMonitor"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Class for monitoring system statistics</p>
<dl class="classmethod">
<dt id="app.utils.utils.SystemMonitor.get_display_status">
<em class="property">classmethod </em><code class="descname">get_display_status</code><span class="sig-paren">(</span><span class="sig-paren">)</span><a class="reference internal" href="_modules/app/utils/utils.xhtml#SystemMonitor.get_display_status"><span class="viewcode-link">[source]</span></a></dt>
<dd><p>Read status text file that has one of three possible states
On – Monitor connected and turned on
Standby – Monitor connected but in standby
ERROR – Monitor error state, The HDMI cable likely not connected or damaged</p>
</dd></dl>

</dd></dl>

</div>
</div>


          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>